format = """
[╭─user────❯](bold blue) $username on  $hostname                                                               $cmd_duration $jobs $time
[|─project─❯](bold red) $directory$python$nodejs$conda
[╰─cmd─────❯](bold green) 
"""

#┣
[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style)"
disabled = false
show_always = true

[hostname]
ssh_only = false
trim_at = "."
disabled = false

# Replace the "❯" symbol in the prompt with "➜"
[character]                            # The name of the module we are configuring is "character"
success_symbol = "[➜](bold green)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

[jobs]
symbol = ""
style = "bold red"
number_threshold = 1
format = "[$symbol]($style)"

#  
# configure directory
[directory]
read_only = " "
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo
style = "bold italic cyan"

[cmd_duration]
format = "[$duration]($style)"
min_time = 4
show_milliseconds = false
disabled = false
style = "bold italic red"

#[directory]
#read_only = " "

[time]
disabled = false
style = "bold white"
format = "[$time]($style)"

[git_branch]
symbol = " "

[java]
symbol = " "

[memory_usage]
symbol = " "

[package]
symbol = " "

[python]
symbol = " "
pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[conda]
symbol = " "
